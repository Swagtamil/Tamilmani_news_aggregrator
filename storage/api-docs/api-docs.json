{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Fetch all articles",
                "operationId": "11aa4cc6561a7b94c56d1201d62513ee",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/articles/{id}": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Fetch a single article by ID",
                "operationId": "b3e529eab04efb5d305b07e2e58d9869",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article details"
                    },
                    "404": {
                        "description": "Article not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the user",
                "description": "Invalidate the user's API token",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Send password reset link to user's email",
                "operationId": "5f9daa4e2d9a09acda465d6b8455a1cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preferences": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Get user preferences",
                "description": "Show the authenticated user's preferences.",
                "operationId": "e7e8a61ae86affbf02c101656a3b5992",
                "responses": {
                    "200": {
                        "description": "User preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Technology"
                                            }
                                        },
                                        "sources": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "BBC"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Store or update user preferences",
                "description": "Store or update the user's preferences.",
                "operationId": "1a3e7b639a919481e5e3f12364358007",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Technology"
                                        }
                                    },
                                    "sources": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "BBC"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Technology"
                                            }
                                        },
                                        "sources": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "BBC"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The categories field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/personalized-feed": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Get personalized news feed based on user preferences",
                "description": "Fetch personalized articles based on user preferences.",
                "operationId": "e88d89ae3936cf720c95a71dfa081574",
                "responses": {
                    "200": {
                        "description": "Personalized articles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Breaking News in Tech"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "Technology"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "example": "BBC"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Some news content here"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "Bearer": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization"
            }
        }
    },
    "tags": [
        {
            "name": "Articles",
            "description": "Articles"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Preferences",
            "description": "Preferences"
        }
    ]
}